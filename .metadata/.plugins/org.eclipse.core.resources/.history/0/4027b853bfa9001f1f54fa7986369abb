package Pavanproj.Tests;

import java.time.Duration;
import java.util.List;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.Assert;
import org.testng.annotations.DataProvider;
import org.testng.annotations.Test;

import PavanProject.pageobjects.CartPage;
import PavanProject.pageobjects.CheckoutPage;
import PavanProject.pageobjects.ConfirmationPage;
import PavanProject.pageobjects.LandingPage;
import PavanProject.pageobjects.OrdersPage;
import PavanProject.pageobjects.ProductCatalouge;
import Pavanproj.TestComponents.BaseTest;
import io.github.bonigarcia.wdm.WebDriverManager;

public class StandAloneTestPageObject extends BaseTest {
	public String Productname = "ADIDAS ORIGINAL";
	@Test(dataProvider="getData",groups = { "Purchase" })
	public void SubmitOrder(String email, String password,String Productname ) throws Exception {
		
        ProductCatalouge productCatalouge = landingPage.loginApplication("pavansoppa@gmail.com", "Pavan@2000");
        List<WebElement> Products = productCatalouge.getProducts();
        productCatalouge.AddProductToCart(Productname);
		CartPage cartpage = productCatalouge.GetCartPage();

		Boolean match = cartpage.varifyProdDisplayed(Productname);
		Assert.assertTrue(match);
        CheckoutPage checkoutPage = cartpage.CheckOut();
		checkoutPage.SelectCountry("India");
		ConfirmationPage confirmationpage = checkoutPage.SubmitOrder();
		String Confirmedmessage = confirmationpage.Confirmed();
		Assert.assertTrue(Confirmedmessage.equalsIgnoreCase("Thankyou for the order."));

	}
	@Test(dependsOnMethods={"SubmitOrder"}) 
	public void OrdersList(){
        ProductCatalouge productCatalouge = landingPage.loginApplication("pavansoppa@gmail.com", "Pavan@2000");
       OrdersPage orderpage=  productCatalouge.GetOrderPage();
      Assert.assertTrue(orderpage.varifyDisplOrderdisplayed(Productname));
		}
	@DataProvider
	public Object[][] getData() {
		
		return new Object[][] {{"pavansoppa@gmail.com","Pavan@2000","ADIDAS ORIGINAL"},{"pavansoppa@gmail.com","Pavan@2000","ZARA COAT 3"}};
	}


}
